#define DEBUG_SW 1
#include <WiFi.h>
#include <Firebase_ESP_Client.h>
//Provide the token generation process info.
#include "addons/TokenHelper.h"
//Provide the RTDB payload printing info and other helper functions.
#include "addons/RTDBHelper.h"
// Insert your network credentials
#define WIFI_SSID "Harsha"
#define WIFI_PASSWORD "123456789"
// Insert Firebase project API Key
#define FIREBASE_HOST "https://esp32-rtdb-c9019-default-rtdb.asia-southeast1.firebasedatabase.app/"
#define API_KEY "AIzaSyB7lWX8bLoRE92lKHMEf_3Kypobd81iUMU"
// Insert RTDB URLefine the RTDB URL */
#define DATABASE_URL "https://esp32-rtdb-c9019-default-rtdb.asia-southeast1.firebasedatabase.app/" 
#define LED1_PIN 12
#define LDR_PIN  34
FirebaseData fbdo;
FirebaseAuth auth;
int i=1;
int j=300;
int ledStatus = false;
FirebaseConfig config;
unsigned long sendDataPrevMillis = 0;
bool signupOK = false;
int ldrData = 0; 
float voltage = 0.0;    
void setup()
{
  pinMode(LED1_PIN,OUTPUT);
 Serial.begin(115200);
 WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
 Serial.print("Connecting to Wi-Fi");
 while (WiFi.status() != WL_CONNECTED){
    Serial.print(".");delay(300);  
}
 Serial.println();
 Serial.print("Connected with IP: ");
 Serial.println(WiFi.localIP());
 Serial.println();

 config.api_key = API_KEY;
 config.database_url = DATABASE_URL;

  /* Sign up */
  if (Firebase.signUp(&config, &auth, "", ""))  {
    Serial.println("signup ok");
    signupOK = true;
  }
  else {
    Serial.print("%s\n" );
  }
  /* Assign the callback fun ction for the long running token generation task */
  config.token_status_callback = tokenStatusCallback; //see addons/TokenHelper.h
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true); 
  }

void loop() 
{
  if (Firebase.ready() && signupOK && (millis() - sendDataPrevMillis > 5000 || sendDataPrevMillis == 0)) {
    sendDataPrevMillis = millis();
    int ldrData=analogRead(LDR_PIN);
    float voltage =analogRead(LDR_PIN)/1000;
    if (Firebase.RTDB.setInt(&fbdo,"Sensor/ldr_data",ldrData) ){
     Serial.println();
     Serial.println(ldrData);
     Serial.println("- successfully saved to:"+ fbdo.dataPath());
     Serial.println("("+ fbdo.dataType() +")");
    }
    else{
      Serial.println("FAILED: " +  fbdo.errorReason() );
    }
    if (Firebase.RTDB.setFloat(&fbdo,"Sensor/voltage",voltage) ){
     Serial.println();Serial.println(voltage);
     Serial.println("- successfully saved to:"+ fbdo.dataPath());
     Serial.println("("+ fbdo.dataType() +")");
    }
    else{
      Serial.println("FAILED: " +  fbdo.errorReason() );
    }
    if(Firebase.RTDB.getBool(&fbdo, "/LED/digital")){
      if(fbdo.dataType()="boolean"){
        ledStatus=fbdo.boolData();
        Serial.println("READ from" + fbdo.dataPath() + " : " + ledStatus);
        digitalWrite(LED1_PIN,ledStatus);
      }
      else{
      Serial.println("FAILED: " +  fbdo.errorReason() );
    }
    }
  }
}

